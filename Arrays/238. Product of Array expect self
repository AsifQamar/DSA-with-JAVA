class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n = nums.length; // length of array
        int[] output_array = new int[n]; // output array for solution

        output_array[0] = 1; // left side index 0 product will be always one and there is no number before it 

        for (int i = 1; i < n; i++) { // loops from left to right
            output_array[i] = output_array[i - 1] * nums[i - 1]; // storing product of all elements to the left of current index
        }

        int right = 1; // to store the product of elements from right side

        for (int i = n - 2; i >= 0; i--) { // loop from right to left starting from second last index
            right = right * nums[i + 1]; // multiply right with the next element in array
            output_array[i] = output_array[i] * right; // multiply left side product (already in output_array) with right side product
        }

        return output_array; // final array with product of all elements except self
    }
}
